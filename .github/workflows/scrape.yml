name: Scrape Biwenger
on:
  schedule:
    - cron: '0 5 * * *'   # 07:00 hora España
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Detectar si existe package-lock.json
      - name: Check for lockfile
        id: lock
        run: |
          if [ -f package-lock.json ]; then
            echo "has_lock=true" >> $GITHUB_OUTPUT
          else
            echo "has_lock=false" >> $GITHUB_OUTPUT
          fi

      # Caché (funciona con o sin lock). Si no hay lock, usa package.json para la key.
      - name: Cache Node modules and Playwright
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
            node_modules
          key: ${{ runner.os }}-playwright-${{ steps.lock.outputs.has_lock == 'true' && hashFiles('package-lock.json') || hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Instalar: ci si hay lock; si no, install normal
      - name: Install dependencies and Playwright
        run: |
          if [ "${{ steps.lock.outputs.has_lock }}" = "true" ]; then
            echo "Using npm ci"
            npm ci
          else
            echo "Using npm install (no package-lock.json)"
            npm install
          fi
          npx playwright install --with-deps

      - name: Run scraper
        env:
          BIWENGER_EMAIL: ${{ secrets.BIWENGER_EMAIL }}
          BIWENGER_PASSWORD: ${{ secrets.BIWENGER_PASSWORD }}
          LIGA_ID: ${{ secrets.LIGA_ID }}
          PUBLIC_OUT_PATH: ./public/data.json
        run: npm start

      - name: Upload public as artifact (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: public-output
          path: public

      - name: Deploy to gh-pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages